

services:
  fastapi:
    build: .
    container_name: fastapi_local_dr
    ports:
      - "8000:8000"
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    depends_on:
      - minio
      - mysql
      - prometheus
      - grafana
    volumes:
      - .:/app
    networks:
      - app-network
    restart: always

  mysql:
    image: mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    restart: always

  minio:
    image: minio/minio
    container_name: minio_container
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    restart: always
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "6001:9090"
    networks:
      - app-network  # ✅ Add this

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "6002:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-network  # ✅ Add this
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-network
    restart: always

volumes:
  mysql-data:
    driver: local
  minio_data:
    driver: local
  grafana-storage:
    driver: local
  prometheus-storage:
    driver: local

networks:
  app-network:
    driver: bridge
